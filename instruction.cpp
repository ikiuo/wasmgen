/*
 * instruction.cpp
 */
#include "instruction.hpp"

namespace wasmgen
{
    namespace Instruction
    {
        // --------------------------------------------------------------------

        const Data table {
            {"i32.const",{Operation(0,0,0,0,1,0),Operand(1,1,0,0),2,{65,256}}},
            {"i64.const",{Operation(0,0,0,0,2,0),Operand(1,2,0,0),2,{66,256}}},
            {"f32.const",{Operation(0,0,0,0,3,0),Operand(1,3,0,0),2,{67,256}}},
            {"f64.const",{Operation(0,0,0,0,4,0),Operand(1,4,0,0),2,{68,256}}},
            {"i8x16.const",{Operation(0,0,0,0,5,0),Operand(1,5,0,0),3,{253,12,256}}},
            {"i16x8.const",{Operation(0,0,0,0,5,0),Operand(1,6,0,0),3,{253,12,256}}},
            {"i32x4.const",{Operation(0,0,0,0,5,0),Operand(1,7,0,0),3,{253,12,256}}},
            {"i64x2.const",{Operation(0,0,0,0,5,0),Operand(1,8,0,0),3,{253,12,256}}},
            {"f32x4.const",{Operation(0,0,0,0,5,0),Operand(1,9,0,0),3,{253,12,256}}},
            {"f64x2.const",{Operation(0,0,0,0,5,0),Operand(1,10,0,0),3,{253,12,256}}},
            {"v128.const",{Operation(0,0,0,0,5,0),Operand(1,5,0,0),3,{253,12,256}}},
            {"drop",{Operation(1,7,0,0,0,0),Operand(0,0,0,0),1,{26}}},
            {"elem.drop",{Operation(0,0,0,0,0,0),Operand(1,14,0,0),3,{252,13,256}}},
            {"data.drop",{Operation(0,0,0,0,0,0),Operand(1,13,0,0),3,{252,9,256}}},
            {"global.get",{Operation(0,0,0,0,7,0),Operand(1,16,0,0),2,{35,256}}},
            {"global.set",{Operation(1,7,0,0,0,0),Operand(1,16,0,0),2,{36,256}}},
            {"local.get",{Operation(1,7,0,0,0,0),Operand(1,17,0,0),2,{32,256}}},
            {"local.set",{Operation(0,0,0,0,7,0),Operand(1,17,0,0),2,{33,256}}},
            {"local.tee",{Operation(1,7,0,0,7,0),Operand(1,17,0,0),2,{34,256}}},
            {"table.get",{Operation(1,1,0,0,6,0),Operand(1,21,0,0),2,{37,256}}},
            {"table.set",{Operation(2,1,7,0,0,0),Operand(1,21,0,0),2,{38,256}}},
            {"table.init",{Operation(3,1,1,1,0,0),Operand(2,21,14,0),4,{252,12,257,256}}},
            {"table.copy",{Operation(3,1,1,1,0,0),Operand(2,22,23,0),4,{252,14,256,257}}},
            {"table.grow",{Operation(0,0,0,0,1,0),Operand(1,21,0,0),3,{252,15,256}}},
            {"table.size",{Operation(0,0,0,0,1,0),Operand(1,21,0,0),3,{252,16,256}}},
            {"table.fill",{Operation(3,1,6,1,0,0),Operand(1,21,0,0),3,{252,17,256}}},
            {"memory.size",{Operation(0,0,0,0,1,0),Operand(0,0,0,0),2,{63,0}}},
            {"memory.grow",{Operation(1,1,0,0,1,0),Operand(0,0,0,0),2,{64,0}}},
            {"memory.init",{Operation(3,1,1,1,0,0),Operand(1,13,0,0),4,{252,8,256,0}}},
            {"memory.copy",{Operation(3,1,1,1,0,0),Operand(0,0,0,0),4,{252,10,0,0}}},
            {"memory.fill",{Operation(3,1,1,1,0,0),Operand(0,0,0,0),3,{252,11,0}}},
            {"i32.load",{Operation(1,1,0,0,1,0),Operand(1,30,0,0),2,{40,256}}},
            {"i64.load",{Operation(1,1,0,0,2,0),Operand(1,31,0,0),2,{41,256}}},
            {"f32.load",{Operation(1,1,0,0,3,0),Operand(1,30,0,0),2,{42,256}}},
            {"f64.load",{Operation(1,1,0,0,4,0),Operand(1,31,0,0),2,{43,256}}},
            {"i32.load8_s",{Operation(1,1,0,0,1,0),Operand(1,28,0,0),2,{44,256}}},
            {"i32.load8_u",{Operation(1,1,0,0,1,0),Operand(1,28,0,0),2,{45,256}}},
            {"i32.load16_s",{Operation(1,1,0,0,1,0),Operand(1,29,0,0),2,{46,256}}},
            {"i32.load16_u",{Operation(1,1,0,0,1,0),Operand(1,29,0,0),2,{47,256}}},
            {"i64.load8_s",{Operation(1,1,0,0,2,0),Operand(1,28,0,0),2,{48,256}}},
            {"i64.load8_u",{Operation(1,1,0,0,2,0),Operand(1,28,0,0),2,{49,256}}},
            {"i64.load16_s",{Operation(1,1,0,0,2,0),Operand(1,29,0,0),2,{50,256}}},
            {"i64.load16_u",{Operation(1,1,0,0,2,0),Operand(1,29,0,0),2,{51,256}}},
            {"i64.load32_s",{Operation(1,1,0,0,2,0),Operand(1,30,0,0),2,{52,256}}},
            {"i64.load32_u",{Operation(1,1,0,0,2,0),Operand(1,30,0,0),2,{53,256}}},
            {"i32.store",{Operation(2,1,1,0,0,0),Operand(1,30,0,0),2,{54,256}}},
            {"i64.store",{Operation(2,1,2,0,0,0),Operand(1,31,0,0),2,{55,256}}},
            {"f32.store",{Operation(2,1,3,0,0,0),Operand(1,30,0,0),2,{56,256}}},
            {"f64.store",{Operation(2,1,4,0,0,0),Operand(1,31,0,0),2,{57,256}}},
            {"i32.store8",{Operation(2,1,1,0,0,0),Operand(1,28,0,0),2,{58,256}}},
            {"i32.store16",{Operation(2,1,1,0,0,0),Operand(1,29,0,0),2,{59,256}}},
            {"i64.store8",{Operation(2,1,2,0,0,0),Operand(1,28,0,0),2,{60,256}}},
            {"i64.store16",{Operation(2,1,2,0,0,0),Operand(1,29,0,0),2,{61,256}}},
            {"i64.store32",{Operation(2,1,2,0,0,0),Operand(1,30,0,0),2,{62,256}}},
            {"v128.load",{Operation(1,1,0,0,5,0),Operand(1,32,0,0),3,{253,0,256}}},
            {"v128.load8x8_s",{Operation(1,1,0,0,5,0),Operand(1,31,0,0),3,{253,1,256}}},
            {"v128.load8x8_u",{Operation(1,1,0,0,5,0),Operand(1,31,0,0),3,{253,2,256}}},
            {"v128.load16x4_s",{Operation(1,1,0,0,5,0),Operand(1,31,0,0),3,{253,3,256}}},
            {"v128.load16x4_u",{Operation(1,1,0,0,5,0),Operand(1,31,0,0),3,{253,4,256}}},
            {"v128.load32x2_s",{Operation(1,1,0,0,5,0),Operand(1,31,0,0),3,{253,5,256}}},
            {"v128.load32x2_u",{Operation(1,1,0,0,5,0),Operand(1,31,0,0),3,{253,6,256}}},
            {"v128.load8_splat",{Operation(1,1,0,0,5,0),Operand(1,28,0,0),3,{253,7,256}}},
            {"v128.load16_splat",{Operation(1,1,0,0,5,0),Operand(1,29,0,0),3,{253,8,256}}},
            {"v128.load32_splat",{Operation(1,1,0,0,5,0),Operand(1,30,0,0),3,{253,9,256}}},
            {"v128.load64_splat",{Operation(1,1,0,0,5,0),Operand(1,31,0,0),3,{253,10,256}}},
            {"v128.store",{Operation(1,1,0,0,5,0),Operand(1,32,0,0),3,{253,11,256}}},
            {"v128.load8_lane",{Operation(2,1,5,0,5,0),Operand(2,11,28,0),4,{253,84,257,256}}},
            {"v128.load16_lane",{Operation(2,1,5,0,5,0),Operand(2,11,29,0),4,{253,85,257,256}}},
            {"v128.load32_lane",{Operation(2,1,5,0,5,0),Operand(2,11,30,0),4,{253,86,257,256}}},
            {"v128.load64_lane",{Operation(2,1,5,0,5,0),Operand(2,11,31,0),4,{253,87,257,256}}},
            {"v128.store8_lane",{Operation(2,1,5,0,0,0),Operand(2,11,28,0),4,{253,88,257,256}}},
            {"v128.store16_lane",{Operation(2,1,5,0,0,0),Operand(2,11,29,0),4,{253,89,257,256}}},
            {"v128.store32_lane",{Operation(2,1,5,0,0,0),Operand(2,11,30,0),4,{253,90,257,256}}},
            {"v128.store64_lane",{Operation(2,1,5,0,0,0),Operand(2,11,31,0),4,{253,91,257,256}}},
            {"v128.load32_zero",{Operation(1,1,0,0,5,0),Operand(1,30,0,0),3,{253,92,256}}},
            {"v128.load64_zero",{Operation(1,1,0,0,5,0),Operand(1,31,0,0),3,{253,93,256}}},
            {"i32.extend8_s",{Operation(1,1,0,0,1,0),Operand(0,0,0,0),1,{192}}},
            {"i32.extend16_s",{Operation(1,2,0,0,2,0),Operand(0,0,0,0),1,{193}}},
            {"i64.extend8_s",{Operation(1,2,0,0,2,0),Operand(0,0,0,0),1,{194}}},
            {"i64.extend16_s",{Operation(1,2,0,0,2,0),Operand(0,0,0,0),1,{195}}},
            {"i64.extend32_s",{Operation(1,2,0,0,2,0),Operand(0,0,0,0),1,{196}}},
            {"i32.wrap",{Operation(1,2,0,0,1,0),Operand(0,0,0,0),1,{167}}},
            {"i64.extend_i32_s",{Operation(1,1,0,0,2,0),Operand(0,0,0,0),1,{172}}},
            {"i64.extend_i32_u",{Operation(1,1,0,0,2,0),Operand(0,0,0,0),1,{173}}},
            {"i32.trunc_f32_s",{Operation(1,3,0,0,1,0),Operand(0,0,0,0),1,{168}}},
            {"i32.trunc_f32_u",{Operation(1,3,0,0,1,0),Operand(0,0,0,0),1,{169}}},
            {"i32.trunc_f64_s",{Operation(1,4,0,0,1,0),Operand(0,0,0,0),1,{170}}},
            {"i32.trunc_f64_u",{Operation(1,4,0,0,1,0),Operand(0,0,0,0),1,{171}}},
            {"i64.trunc_f32_s",{Operation(1,3,0,0,2,0),Operand(0,0,0,0),1,{174}}},
            {"i64.trunc_f32_u",{Operation(1,3,0,0,2,0),Operand(0,0,0,0),1,{175}}},
            {"i64.trunc_f64_s",{Operation(1,4,0,0,2,0),Operand(0,0,0,0),1,{176}}},
            {"i64.trunc_f64_u",{Operation(1,4,0,0,2,0),Operand(0,0,0,0),1,{177}}},
            {"i32.trunc_sat_f32_s",{Operation(1,3,0,0,1,0),Operand(0,0,0,0),2,{252,0}}},
            {"i32.trunc_sat_f32_u",{Operation(1,3,0,0,1,0),Operand(0,0,0,0),2,{252,1}}},
            {"i32.trunc_sat_f64_s",{Operation(1,4,0,0,1,0),Operand(0,0,0,0),2,{252,2}}},
            {"i32.trunc_sat_f64_u",{Operation(1,4,0,0,1,0),Operand(0,0,0,0),2,{252,3}}},
            {"i64.trunc_sat_f32_s",{Operation(1,3,0,0,2,0),Operand(0,0,0,0),2,{252,4}}},
            {"i64.trunc_sat_f32_u",{Operation(1,3,0,0,2,0),Operand(0,0,0,0),2,{252,5}}},
            {"i64.trunc_sat_f64_s",{Operation(1,4,0,0,2,0),Operand(0,0,0,0),2,{252,6}}},
            {"i64.trunc_sat_f64_u",{Operation(1,4,0,0,2,0),Operand(0,0,0,0),2,{252,7}}},
            {"f32.demote_f64",{Operation(1,4,0,0,3,0),Operand(0,0,0,0),1,{182}}},
            {"f64.promote_f32",{Operation(1,3,0,0,4,0),Operand(0,0,0,0),1,{187}}},
            {"f32.convert_i32_s",{Operation(1,1,0,0,3,0),Operand(0,0,0,0),1,{178}}},
            {"f32.convert_i32_u",{Operation(1,1,0,0,3,0),Operand(0,0,0,0),1,{179}}},
            {"f32.convert_i64_s",{Operation(1,2,0,0,3,0),Operand(0,0,0,0),1,{180}}},
            {"f32.convert_i64_u",{Operation(1,2,0,0,3,0),Operand(0,0,0,0),1,{181}}},
            {"f64.convert_i32_s",{Operation(1,1,0,0,4,0),Operand(0,0,0,0),1,{183}}},
            {"f64.convert_i32_u",{Operation(1,1,0,0,4,0),Operand(0,0,0,0),1,{184}}},
            {"f64.convert_i64_s",{Operation(1,2,0,0,4,0),Operand(0,0,0,0),1,{185}}},
            {"f64.convert_i64_u",{Operation(1,2,0,0,4,0),Operand(0,0,0,0),1,{186}}},
            {"i32.reinterpret_f32",{Operation(1,3,0,0,1,0),Operand(0,0,0,0),1,{188}}},
            {"i64.reinterpret_f64",{Operation(1,4,0,0,2,0),Operand(0,0,0,0),1,{189}}},
            {"f32.reinterpret_i32",{Operation(1,1,0,0,3,0),Operand(0,0,0,0),1,{190}}},
            {"f64.reinterpret_i64",{Operation(1,2,0,0,4,0),Operand(0,0,0,0),1,{191}}},
            {"i8x16.splat",{Operation(1,1,0,0,5,0),Operand(0,0,0,0),2,{253,15}}},
            {"i16x8.splat",{Operation(1,1,0,0,5,0),Operand(0,0,0,0),2,{253,16}}},
            {"i32x4.splat",{Operation(1,1,0,0,5,0),Operand(0,0,0,0),2,{253,17}}},
            {"i64x2.splat",{Operation(1,2,0,0,5,0),Operand(0,0,0,0),2,{253,18}}},
            {"f32x4.splat",{Operation(1,3,0,0,5,0),Operand(0,0,0,0),2,{253,19}}},
            {"f64x2.splat",{Operation(1,4,0,0,5,0),Operand(0,0,0,0),2,{253,20}}},
            {"i8x16.extract_lane_s",{Operation(1,5,0,0,1,0),Operand(1,11,0,0),3,{253,21,256}}},
            {"i8x16.extract_lane_u",{Operation(1,5,0,0,1,0),Operand(1,11,0,0),3,{253,22,256}}},
            {"i16x8.extract_lane_s",{Operation(1,5,0,0,1,0),Operand(1,11,0,0),3,{253,24,256}}},
            {"i16x8.extract_lane_u",{Operation(1,5,0,0,1,0),Operand(1,11,0,0),3,{253,25,256}}},
            {"i32x4.extract_lane",{Operation(1,5,0,0,1,0),Operand(1,11,0,0),3,{253,27,256}}},
            {"i64x2.extract_lane",{Operation(1,5,0,0,2,0),Operand(1,11,0,0),3,{253,29,256}}},
            {"f32x4.extract_lane",{Operation(1,5,0,0,3,0),Operand(1,11,0,0),3,{253,31,256}}},
            {"f64x2.extract_lane",{Operation(1,5,0,0,4,0),Operand(1,11,0,0),3,{253,33,256}}},
            {"i32x4.trunc_sat_f32x4_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,248}}},
            {"i32x4.trunc_sat_f32x4_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,249}}},
            {"i32x4.trunc_sat_f64x2_s_zero",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,252}}},
            {"i32x4.trunc_sat_f64x2_u_zero",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,253}}},
            {"f32x4.convert_i32x4_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,250}}},
            {"f32x4.convert_i32x4_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,251}}},
            {"f64x2.convert_low_i32x4_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,254}}},
            {"f64x2.convert_low_i32x4_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,255}}},
            {"f32x4.demote_f64x2_zero",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,94}}},
            {"f64x2.promote_low_f32x4",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,95}}},
            {"i16x8.extend_low_i8x16_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,135}}},
            {"i16x8.extend_high_i8x16_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,136}}},
            {"i16x8.extend_low_i8x16_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,137}}},
            {"i16x8.extend_high_i8x16_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,138}}},
            {"i32x4.extend_low_i16x8_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,167}}},
            {"i32x4.extend_high_i16x8_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,168}}},
            {"i32x4.extend_low_i16x8_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,169}}},
            {"i32x4.extend_high_i16x8_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,170}}},
            {"i64x2.extend_low_i32x4_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,199}}},
            {"i64x2.extend_high_i32x4_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,200}}},
            {"i64x2.extend_low_i32x4_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,201}}},
            {"i64x2.extend_high_i32x4_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,202}}},
            {"i8x16.narrow_i16x8_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,101}}},
            {"i8x16.narrow_i16x8_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,102}}},
            {"i16x8.narrow_i32x4_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,133}}},
            {"i16x8.narrow_i32x4_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,134}}},
            {"i32x4.narrow_i32x4_s",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,165}}},
            {"i32x4.narrow_i32x4_u",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,166}}},
            {"i8x16.replace_lane",{Operation(2,5,1,0,5,0),Operand(1,11,0,0),3,{253,23,256}}},
            {"i16x8.replace_lane",{Operation(2,5,1,0,5,0),Operand(1,11,0,0),3,{253,26,256}}},
            {"i32x4.replace_lane",{Operation(2,5,1,0,5,0),Operand(1,11,0,0),3,{253,28,256}}},
            {"i64x2.replace_lane",{Operation(2,5,2,0,5,0),Operand(1,11,0,0),3,{253,30,256}}},
            {"f32x4.replace_lane",{Operation(2,5,3,0,5,0),Operand(1,11,0,0),3,{253,32,256}}},
            {"f64x2.replace_lane",{Operation(2,5,4,0,5,0),Operand(1,11,0,0),3,{253,34,256}}},
            {"i8x16.shuffle",{Operation(2,5,5,0,5,0),Operand(1,12,0,0),3,{253,13,256}}},
            {"i8x16.swizzle",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,14}}},
            {"i32.eqz",{Operation(1,1,0,0,1,0),Operand(0,0,0,0),1,{69}}},
            {"i32.eq",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{70}}},
            {"i32.ne",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{71}}},
            {"i32.lt_s",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{72}}},
            {"i32.lt_u",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{73}}},
            {"i32.gt_s",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{74}}},
            {"i32.gt_u",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{75}}},
            {"i32.le_s",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{76}}},
            {"i32.le_u",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{77}}},
            {"i32.ge_s",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{78}}},
            {"i32.ge_u",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{79}}},
            {"i64.eqz",{Operation(1,2,0,0,1,0),Operand(0,0,0,0),1,{80}}},
            {"i64.eq",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{81}}},
            {"i64.ne",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{82}}},
            {"i64.lt_s",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{83}}},
            {"i64.lt_u",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{84}}},
            {"i64.gt_s",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{85}}},
            {"i64.gt_u",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{86}}},
            {"i64.le_s",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{87}}},
            {"i64.le_u",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{88}}},
            {"i64.ge_s",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{89}}},
            {"i64.ge_u",{Operation(2,2,2,0,1,0),Operand(0,0,0,0),1,{90}}},
            {"f32.eq",{Operation(2,3,3,0,1,0),Operand(0,0,0,0),1,{91}}},
            {"f32.ne",{Operation(2,3,3,0,1,0),Operand(0,0,0,0),1,{92}}},
            {"f32.lt",{Operation(2,3,3,0,1,0),Operand(0,0,0,0),1,{93}}},
            {"f32.gt",{Operation(2,3,3,0,1,0),Operand(0,0,0,0),1,{94}}},
            {"f32.le",{Operation(2,3,3,0,1,0),Operand(0,0,0,0),1,{95}}},
            {"f32.ge",{Operation(2,3,3,0,1,0),Operand(0,0,0,0),1,{96}}},
            {"f64.eq",{Operation(2,4,4,0,1,0),Operand(0,0,0,0),1,{97}}},
            {"f64.ne",{Operation(2,4,4,0,1,0),Operand(0,0,0,0),1,{98}}},
            {"f64.lt",{Operation(2,4,4,0,1,0),Operand(0,0,0,0),1,{99}}},
            {"f64.gt",{Operation(2,4,4,0,1,0),Operand(0,0,0,0),1,{100}}},
            {"f64.le",{Operation(2,4,4,0,1,0),Operand(0,0,0,0),1,{101}}},
            {"f64.ge",{Operation(2,4,4,0,1,0),Operand(0,0,0,0),1,{102}}},
            {"i8x16.eq",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,35}}},
            {"i8x16.ne",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,36}}},
            {"i8x16.lt_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,37}}},
            {"i8x16.lt_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,38}}},
            {"i8x16.gt_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,39}}},
            {"i8x16.gt_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,40}}},
            {"i8x16.le_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,41}}},
            {"i8x16.le_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,42}}},
            {"i8x16.ge_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,43}}},
            {"i8x16.ge_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,44}}},
            {"i16x8.eq",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,45}}},
            {"i16x8.ne",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,46}}},
            {"i16x8.lt_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,47}}},
            {"i16x8.lt_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,48}}},
            {"i16x8.gt_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,49}}},
            {"i16x8.gt_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,50}}},
            {"i16x8.le_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,51}}},
            {"i16x8.le_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,52}}},
            {"i16x8.ge_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,53}}},
            {"i16x8.ge_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,54}}},
            {"i32x4.eq",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,55}}},
            {"i32x4.ne",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,56}}},
            {"i32x4.lt_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,57}}},
            {"i32x4.lt_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,58}}},
            {"i32x4.gt_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,59}}},
            {"i32x4.gt_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,60}}},
            {"i32x4.le_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,61}}},
            {"i32x4.le_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,62}}},
            {"i32x4.ge_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,63}}},
            {"i32x4.ge_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,64}}},
            {"i64x2.eq",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,214}}},
            {"i64x2.ne",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,215}}},
            {"i64x2.lt_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,216}}},
            {"i64x2.gt_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,217}}},
            {"i64x2.le_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,218}}},
            {"i64x2.ge_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,219}}},
            {"f32x4.eq",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,65}}},
            {"f32x4.ne",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,66}}},
            {"f32x4.lt",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,67}}},
            {"f32x4.gt",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,68}}},
            {"f32x4.le",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,69}}},
            {"f32x4.ge",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,70}}},
            {"f64x2.eq",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,71}}},
            {"f64x2.ne",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,72}}},
            {"f64x2.lt",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,73}}},
            {"f64x2.gt",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,74}}},
            {"f64x2.le",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,75}}},
            {"f64x2.ge",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,76}}},
            {"v128.any_true",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,83}}},
            {"i8x16.all_true",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,99}}},
            {"i16x8.all_true",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,131}}},
            {"i32x4.all_true",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,163}}},
            {"i64x2.all_true",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,195}}},
            {"select",{Operation(3,7,7,1,7,0),Operand(1,26,0,0),2,{28,256}}},
            {"i32.clz",{Operation(1,1,0,0,1,0),Operand(0,0,0,0),1,{103}}},
            {"i32.ctz",{Operation(1,1,0,0,1,0),Operand(0,0,0,0),1,{104}}},
            {"i32.popcnt",{Operation(1,1,0,0,1,0),Operand(0,0,0,0),1,{105}}},
            {"i32.add",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{106}}},
            {"i32.sub",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{107}}},
            {"i32.mul",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{108}}},
            {"i32.div_s",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{109}}},
            {"i32.div_u",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{110}}},
            {"i32.rem_s",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{111}}},
            {"i32.rem_u",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{112}}},
            {"i32.and",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{113}}},
            {"i32.or",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{114}}},
            {"i32.xor",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{115}}},
            {"i32.shl",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{116}}},
            {"i32.shr_s",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{117}}},
            {"i32.shr_u",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{118}}},
            {"i32.rotl",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{119}}},
            {"i32.rotr",{Operation(2,1,1,0,1,0),Operand(0,0,0,0),1,{120}}},
            {"i64.clz",{Operation(1,2,0,0,2,0),Operand(0,0,0,0),1,{121}}},
            {"i64.ctz",{Operation(1,2,0,0,2,0),Operand(0,0,0,0),1,{122}}},
            {"i64.popcnt",{Operation(1,2,0,0,2,0),Operand(0,0,0,0),1,{123}}},
            {"i64.add",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{124}}},
            {"i64.sub",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{125}}},
            {"i64.mul",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{126}}},
            {"i64.div_s",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{127}}},
            {"i64.div_u",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{128}}},
            {"i64.rem_s",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{129}}},
            {"i64.rem_u",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{130}}},
            {"i64.and",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{131}}},
            {"i64.or",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{132}}},
            {"i64.xor",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{133}}},
            {"i64.shl",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{134}}},
            {"i64.shr_s",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{135}}},
            {"i64.shr_u",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{136}}},
            {"i64.rotl",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{137}}},
            {"i64.rotr",{Operation(2,2,2,0,2,0),Operand(0,0,0,0),1,{138}}},
            {"f32.abs",{Operation(1,3,0,0,3,0),Operand(0,0,0,0),1,{139}}},
            {"f32.neg",{Operation(1,3,0,0,3,0),Operand(0,0,0,0),1,{140}}},
            {"f32.ceil",{Operation(1,3,0,0,3,0),Operand(0,0,0,0),1,{141}}},
            {"f32.floor",{Operation(1,3,0,0,3,0),Operand(0,0,0,0),1,{142}}},
            {"f32.trunc",{Operation(1,3,0,0,3,0),Operand(0,0,0,0),1,{143}}},
            {"f32.nearest",{Operation(1,3,0,0,3,0),Operand(0,0,0,0),1,{144}}},
            {"f32.sqrt",{Operation(1,3,0,0,3,0),Operand(0,0,0,0),1,{145}}},
            {"f32.add",{Operation(2,3,3,0,3,0),Operand(0,0,0,0),1,{146}}},
            {"f32.sub",{Operation(2,3,3,0,3,0),Operand(0,0,0,0),1,{147}}},
            {"f32.mul",{Operation(2,3,3,0,3,0),Operand(0,0,0,0),1,{148}}},
            {"f32.div",{Operation(2,3,3,0,3,0),Operand(0,0,0,0),1,{149}}},
            {"f32.min",{Operation(2,3,3,0,3,0),Operand(0,0,0,0),1,{150}}},
            {"f32.max",{Operation(2,3,3,0,3,0),Operand(0,0,0,0),1,{151}}},
            {"f32.copysign",{Operation(2,3,3,0,3,0),Operand(0,0,0,0),1,{152}}},
            {"f64.abs",{Operation(1,4,0,0,4,0),Operand(0,0,0,0),1,{153}}},
            {"f64.neg",{Operation(1,4,0,0,4,0),Operand(0,0,0,0),1,{154}}},
            {"f64.ceil",{Operation(1,4,0,0,4,0),Operand(0,0,0,0),1,{155}}},
            {"f64.floor",{Operation(1,4,0,0,4,0),Operand(0,0,0,0),1,{156}}},
            {"f64.trunc",{Operation(1,4,0,0,4,0),Operand(0,0,0,0),1,{157}}},
            {"f64.nearest",{Operation(1,4,0,0,4,0),Operand(0,0,0,0),1,{158}}},
            {"f64.sqrt",{Operation(1,4,0,0,4,0),Operand(0,0,0,0),1,{159}}},
            {"f64.add",{Operation(2,4,4,0,4,0),Operand(0,0,0,0),1,{160}}},
            {"f64.sub",{Operation(2,4,4,0,4,0),Operand(0,0,0,0),1,{161}}},
            {"f64.mul",{Operation(2,4,4,0,4,0),Operand(0,0,0,0),1,{162}}},
            {"f64.div",{Operation(2,4,4,0,4,0),Operand(0,0,0,0),1,{163}}},
            {"f64.min",{Operation(2,4,4,0,4,0),Operand(0,0,0,0),1,{164}}},
            {"f64.max",{Operation(2,4,4,0,4,0),Operand(0,0,0,0),1,{165}}},
            {"f64.copysign",{Operation(2,4,4,0,4,0),Operand(0,0,0,0),1,{166}}},
            {"v128.not",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,77}}},
            {"v128.and",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,78}}},
            {"v128.andnot",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,79}}},
            {"v128.or",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,80}}},
            {"v128.xor",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,81}}},
            {"v128.bitselect",{Operation(3,5,5,5,5,0),Operand(0,0,0,0),2,{253,82}}},
            {"i8x16.abs",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,96}}},
            {"i8x16.neg",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,97}}},
            {"i8x16.popcnt",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,98}}},
            {"i8x16.bitmask",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,100}}},
            {"i8x16.shl",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,107}}},
            {"i8x16.shr_s",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,108}}},
            {"i8x16.shr_u",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,109}}},
            {"i8x16.add",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,110}}},
            {"i8x16.add_sat_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,111}}},
            {"i8x16.add_sat_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,112}}},
            {"i8x16.sub",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,113}}},
            {"i8x16.sub_sat_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,114}}},
            {"i8x16.sub_sat_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,115}}},
            {"i8x16.min_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,118}}},
            {"i8x16.min_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,119}}},
            {"i8x16.max_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,120}}},
            {"i8x16.max_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,121}}},
            {"i8x16.avr_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,123}}},
            {"i16x8.abs",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,128}}},
            {"i16x8.neg",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,129}}},
            {"i16x8.bitmask",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,132}}},
            {"i16x8.shl",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,139}}},
            {"i16x8.shr_s",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,140}}},
            {"i16x8.shr_u",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,141}}},
            {"i16x8.add",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,142}}},
            {"i16x8.add_sat_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,143}}},
            {"i16x8.add_sat_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,144}}},
            {"i16x8.sub",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,145}}},
            {"i16x8.sub_sat_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,146}}},
            {"i16x8.sub_sat_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,147}}},
            {"i16x8.mul",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,149}}},
            {"i16x8.min_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,150}}},
            {"i16x8.min_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,151}}},
            {"i16x8.max_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,152}}},
            {"i16x8.max_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,153}}},
            {"i16x8.avr_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,155}}},
            {"i16x8.q15mulr_sat_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,130}}},
            {"i16x8.extadd_pairwise_i8x16_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,124}}},
            {"i16x8.extadd_pairwise_i8x16_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,125}}},
            {"i16x8.extmul_low_i8x16_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,156}}},
            {"i16x8.extmul_high_i8x16_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,157}}},
            {"i16x8.extmul_low_i8x16_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,158}}},
            {"i16x8.extmul_high_i8x16_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,159}}},
            {"i32x4.abs",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,160}}},
            {"i32x4.neg",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,161}}},
            {"i32x4.bitmask",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,164}}},
            {"i32x4.shl",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,171}}},
            {"i32x4.shr_s",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,172}}},
            {"i32x4.shr_u",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,173}}},
            {"i32x4.add",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,174}}},
            {"i32x4.sub",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,177}}},
            {"i32x4.mul",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,181}}},
            {"i32x4.min_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,182}}},
            {"i32x4.min_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,183}}},
            {"i32x4.max_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,184}}},
            {"i32x4.max_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,185}}},
            {"i32x4.dot_i16x8_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,186}}},
            {"i32x4.extadd_pairwise_i16x8_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,126}}},
            {"i32x4.extadd_pairwise_i16x8_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,127}}},
            {"i32x4.extmul_low_i16x8_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,188}}},
            {"i32x4.extmul_high_i16x8_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,189}}},
            {"i32x4.extmul_low_i16x8_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,190}}},
            {"i32x4.extmul_high_i16x8_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,191}}},
            {"i64x2.abs",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,192}}},
            {"i64x2.neg",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,193}}},
            {"i64x2.bitmask",{Operation(1,5,0,0,1,0),Operand(0,0,0,0),2,{253,196}}},
            {"i64x2.shl",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,203}}},
            {"i64x2.shr_s",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,204}}},
            {"i64x2.shr_u",{Operation(2,5,1,0,5,0),Operand(0,0,0,0),2,{253,205}}},
            {"i64x2.add",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,206}}},
            {"i64x2.sub",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,209}}},
            {"i64x2.mul",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,213}}},
            {"i64x2.extmul_low_i8x16_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,220}}},
            {"i64x2.extmul_high_i8x16_s",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,221}}},
            {"i64x2.extmul_low_i8x16_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,222}}},
            {"i64x2.extmul_high_i8x16_u",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,223}}},
            {"f32x4.ceil",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,103}}},
            {"f32x4.floor",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,104}}},
            {"f32x4.trunc",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,105}}},
            {"f32x4.nearest",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,106}}},
            {"f32x4.abs",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,224}}},
            {"f32x4.neg",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,225}}},
            {"f32x4.sqrt",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,227}}},
            {"f32x4.add",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,228}}},
            {"f32x4.sub",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,229}}},
            {"f32x4.mul",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,230}}},
            {"f32x4.div",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,231}}},
            {"f32x4.min",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,232}}},
            {"f32x4.max",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,233}}},
            {"f32x4.pmin",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,234}}},
            {"f32x4.pmax",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,235}}},
            {"f64x2.ceil",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,116}}},
            {"f64x2.floor",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,117}}},
            {"f64x2.trunc",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,122}}},
            {"f64x2.nearest",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,148}}},
            {"f64x2.abs",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,236}}},
            {"f64x2.neg",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,237}}},
            {"f64x2.sqrt",{Operation(1,5,0,0,5,0),Operand(0,0,0,0),2,{253,239}}},
            {"f64x2.add",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,240}}},
            {"f64x2.sub",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,241}}},
            {"f64x2.mul",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,242}}},
            {"f64x2.div",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,243}}},
            {"f64x2.min",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,244}}},
            {"f64x2.max",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,245}}},
            {"f64x2.pmin",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,246}}},
            {"f64x2.pmax",{Operation(2,5,5,0,5,0),Operand(0,0,0,0),2,{253,247}}},
            {"ref.null",{Operation(0,0,0,0,6,0),Operand(1,25,0,0),2,{208,256}}},
            {"ref.is_null",{Operation(1,6,0,0,1,0),Operand(0,0,0,0),1,{209}}},
            {"ref.func",{Operation(0,0,0,0,6,0),Operand(1,15,0,0),2,{210,256}}},
            {"unreachable",{Operation(0,0,0,0,0,0),Operand(0,0,0,0),1,{0}}},
            {"nop",{Operation(0,0,0,0,0,0),Operand(0,0,0,0),1,{1}}},
            {"block",{Operation(0,0,0,0,0,2),Operand(1,27,0,0),2,{2,256}}},
            {"loop",{Operation(0,0,0,0,0,2),Operand(1,27,0,0),2,{3,256}}},
            {"if",{Operation(0,0,0,0,0,2),Operand(1,27,0,0),2,{4,256}}},
            {"else",{Operation(0,0,0,0,0,3),Operand(0,0,0,0),1,{5}}},
            {"end",{Operation(0,0,0,0,0,1),Operand(0,0,0,0),1,{11}}},
            {"br",{Operation(0,0,0,0,0,0),Operand(1,19,0,0),2,{12,256}}},
            {"br_if",{Operation(1,1,0,0,0,0),Operand(1,19,0,0),2,{13,256}}},
            {"br_table",{Operation(1,1,0,0,0,0),Operand(1,20,0,0),2,{14,256}}},
            {"return",{Operation(0,0,0,0,0,0),Operand(0,0,0,0),1,{15}}},
            {"call",{Operation(0,0,0,0,0,0),Operand(1,15,0,0),2,{16,256}}},
            {"call_indirect",{Operation(1,1,0,0,0,0),Operand(2,21,24,0),3,{17,257,256}}},
            /*-*/
            {"",{Operation(PSEUDO_EMPTY),Operand(0),0,{0}}},
            /*-*/
#define EXINS(name, code)  {name,{Operation(code),Operand(0),0,{0}}}
            /*-*/
#define PSEUDO(name, code)  {name,{Operation(code),Operand(0),0,{0}}}
            PSEUDO(".align",   BD_ALIGN),
            PSEUDO(".balign",  BD_BALIGN),
            PSEUDO(".i8",      BD_I8),
            PSEUDO(".i8le",    BD_I8),
            PSEUDO(".i8be",    BD_I8_BE),
            PSEUDO(".i16",     BD_I16),
            PSEUDO(".i16le",   BD_I16),
            PSEUDO(".i16be",   BD_I16_BE),
            PSEUDO(".i32",     BD_I32),
            PSEUDO(".i32le",   BD_I32),
            PSEUDO(".i32be",   BD_I32_BE),
            PSEUDO(".i64",     BD_I64),
            PSEUDO(".i64le",   BD_I64),
            PSEUDO(".i64be",   BD_I64_BE),
            PSEUDO(".f32",     BD_F32),
            PSEUDO(".f32le",   BD_F32),
            PSEUDO(".f32be",   BD_F32_BE),
            PSEUDO(".f64",     BD_F64),
            PSEUDO(".f64le",   BD_F64),
            PSEUDO(".f64be",   BD_F64_BE),
            PSEUDO(".sleb",    BD_SLEB),
            PSEUDO(".uleb",    BD_ULEB),
            PSEUDO(".string",  BD_STRING),
            PSEUDO(".nstring", BD_NSTRING),
            /*-*/
            PSEUDO(".custom", PSEUDO_CUSTOM),
            PSEUDO(".type",   PSEUDO_TYPE),
            /**/
            PSEUDO(".import", PSEUDO_IMPORT),
            PSEUDO(".import.func",   IMP_FUNC),
            PSEUDO(".import.table",  IMP_TABLE),
            PSEUDO(".import.memory", IMP_MEMORY),
            PSEUDO(".import.const",  IMP_CONST),
            PSEUDO(".import.var",    IMP_VAR),
            PSEUDO(".imp.func",   IPC_FUNC),
            PSEUDO(".imp.table",  IPC_TABLE),
            PSEUDO(".imp.memory", IPC_MEMORY),
            PSEUDO(".imp.const",  IPC_CONST),
            PSEUDO(".imp.var",    IPC_VAR),
            /**/
            PSEUDO(".code",   PSEUDO_FUNCODE),
            // PSEUDO(".func",   PSEUDO_FUNCODE),
            PSEUDO(".table",  PSEUDO_TABLE),
            PSEUDO(".memory", PSEUDO_MEMORY),
            /**/
            PSEUDO(".gconst", PG_CONST),
            PSEUDO(".gvar",   PG_VAR),
            /**/
            PSEUDO(".export",    PSEUDO_EXPORT),
            PSEUDO(".export.func",   PSEUDO_EXPORT_FUNC),
            PSEUDO(".export.table",  PSEUDO_EXPORT_TABLE),
            PSEUDO(".export.memory", PSEUDO_EXPORT_MEMORY),
            PSEUDO(".export.global", PSEUDO_EXPORT_GLOBAL),
            PSEUDO(".start",     PSEUDO_START),
            PSEUDO(".element",   PSEUDO_ELEMENT),
            PSEUDO(".data",      PSEUDO_DATA),
            // PSEUDO(".datacount", PSEUDO_DATACOUNT),
            /*-*/
            PSEUDO(".impfunc",   IPC_FUNC),
            PSEUDO(".imptable",  IPC_TABLE),
            PSEUDO(".impmemory", IPC_MEMORY),
            PSEUDO(".impconst",  IPC_CONST),
            PSEUDO(".impvar",    IPC_VAR),
            /**/
            PSEUDO(".param", FPC_PARAM),
            PSEUDO(".local", FPC_LOCAL),
            /**/
            PSEUDO(".reftype",  EPC_REFTYPE),
            PSEUDO(".tableidx", EPC_TABLEIDX),
            PSEUDO(".offset",   EPC_OFFSET),
            PSEUDO(".funcidx",  EPC_FUNCIDX),
            /**/
            PSEUDO(".memidx", DPC_MEMIDX),
            /*-*/
            PSEUDO(".alias", PSEUDO_ALIAS),
            /*-*/
            PSEUDO("@if",    ASW_IF),
            PSEUDO("@elif",  ASW_ELIF),
            PSEUDO("@else",  ASW_ELSE),
            PSEUDO("@endif", ASW_ENDIF),
            PSEUDO("@set",   ASW_SET),
            PSEUDO("@unset", ASW_UNSET),
            /**/
            PSEUDO("@message", PSEUDO_MESSAGE),
            PSEUDO("@include", PSEUDO_INCLUDE),
            PSEUDO("@option",  PSEUDO_OPTION),
        };

        // --------------------------------------------------------------------

    } // Instruction
} // wasmgen
