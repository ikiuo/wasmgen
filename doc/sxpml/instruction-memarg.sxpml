;; -*- Lisp -*-

(@include "variable.sxpml")

(@def $wasmgen-instruction-memarg
  (@h3 "オペランド" $spc (code "memarg"))
  (p "オペランド" (code "memarg") "は" (code "offset") "と" (code "align") "を表します。")
  (table
   (tr
    (th (code "memarg"))
    (th "備考"))
   (tr
    (td (code "offset,align"))
    (td (code "offset") "を明示、" (code "align") "も明示"))
   (tr
    (td (code "offset"))
    (td (code "offset") "を明示、"(code "align") "を省略"))
   (tr
    (td)
    (td (code "offset") "を省略、" (code "align") "も省略"))
   ) ; table
  (p (code "offset") "の既定値は" (code "0") "で、"
     (code "align") "の既定値は命令次第です。")
  $vpad

  (h4 (code "align") "の既定値")
  (h5 "整数および浮動小数点型のメモリ アクセス")
  (table
   (tr
    (th (code "align"))
    (th (code "i32"))
    (th (code "i64"))
    (th (code "f32"))
    (th (code "f64")))
   (tr
    (th (code "0"))
    (td $vtop
	(code "i32.load8_s") (br)
	(code "i32.load8_u") (br)
	(code "i32.store8") (br)
	(br)
	(code "s32.load8") (br)
	(code "u32.load8"))
    (td $vtop
	(code "i64.load8_s") (br)
	(code "i64.load8_u") (br)
	(code "i64.store8") (br)
	(br)
	(code "s64.load8") (br)
	(code "u64.load8"))
    (td)
    (td))
   (tr
    (th (code "1"))
    (td $vtop
	(code "i32.load16_s") (br)
	(code "i32.load16_u") (br)
	(code "i32.store16") (br)
	(br)
	(code "s32.load16") (br)
	(code "u32.load16"))
    (td $vtop
	(code "i64.load16_s") (br)
	(code "i64.load16_u") (br)
	(code "i64.store16") (br)
	(br)
	(code "s64.load16") (br)
	(code "u64.load16"))
    (td)
    (td))
   (tr
    (th (code "2"))
    (td $vtop
	(code "i32.load") (br)
	(code "i32.store") (br)
	(br)
	(br)
	(br)
	(code "s32.load") (br)
	(code "u32.load") (br)
	(code "s32.store") (br)
	(code "u32.store"))
    (td $vtop
	(code "i64.load32_s") (br)
	(code "i64.load32_u") (br)
	(code "i64.store32") (br)
	(br)
	(br)
	(code "s64.load32") (br)
	(code "u64.load32") (br)
	(code "s64.store32") (br)
	(code "u64.store32"))
    (td $vtop
	(code "f32.load") (br)
	(code "f32.store"))
    (td))
   (tr
    (th (code "3"))
    (td)
    (td $vtop
	(code "i64.load") (br)
	(code "i64.store"))
    (td)
    (td $vtop
	(code "f64.load") (br)
	(code "f64.store")))
   ) ; table

  (h5 "ベクトル型のメモリ アクセス")
  (table
   (tr
    (th (code "align=0"))
    (th (code "align=1"))
    (th (code "align=2"))
    (th (code "align=3"))
    (th (code "align=4")))
   (tr
    (td $vtop
	(code "v128.load8_lane") (br)
	(code "i8x16.load_lane") (br)
	(code "s8x16.load_lane") (br)
	(code "u8x16.load_lane") (br)
	(br)
	(code "v128.load8_splat") (br)
	(code "i8x16.load_splat") (br)
	(code "s8x16.load_splat") (br)
	(code "u8x16.load_splat"))
    (td $vtop
	(code "v128.load16_lane") (br)
	(code "i16x8.load_lane") (br)
	(code "s16x8.load_lane") (br)
	(code "u16x8.load_lane") (br)
	(br)
	(code "v128.load16_splat") (br)
	(code "i16x8.load_splat") (br)
	(code "s16x8.load_splat") (br)
	(code "u16x8.load_splat"))
    (td $vtop
	(code "v128.load32_lane") (br)
	(code "i32x4.load_lane") (br)
	(code "s32x4.load_lane") (br)
	(code "u32x4.load_lane") (br)
	(code "f32x4.load_lane") (br)
	(br)
	(code "v128.load32_splat") (br)
	(code "i32x4.load_splat") (br)
	(code "s32x4.load_splat") (br)
	(code "u32x4.load_splat") (br)
	(code "f32x4.load_splat") (br)
	(br)
	(code "v128.load32_zero") (br)
	(code "i32x4.load_zero") (br)
	(code "s32x4.load_zero") (br)
	(code "u32x4.load_zero") (br)
	(code "f32x4.load_zero"))
    (td $vtop
	(code "v128.load64_lane") (br)
	(code "i64x2.load_lane") (br)
	(code "s64x2.load_lane") (br)
	(code "u64x2.load_lane") (br)
	(code "f64x2.load_lane") (br)
	(br)
	(code "v128.load64_splat") (br)
	(code "i64x2.load_splat") (br)
	(code "s64x2.load_splat") (br)
	(code "u64x2.load_splat") (br)
	(code "f64x2.load_splat") (br)
	(br)
	(code "v128.load64_zero") (br)
	(code "i64x2.load_zero") (br)
	(code "s64x2.load_zero") (br)
	(code "u64x2.load_zero") (br)
	(code "f64x2.load_zero") (br)
	(br)
	(code "v128.load8x8_s") (br)
	(code "s16x8.load8x8") (br)
	(br)
	(code "v128.load8x8_u") (br)
	(code "u16x8.load8x8") (br)
	(br)
	(code "v128.load16x4_s") (br)
	(code "s32x4.load16x4") (br)
	(br)
	(code "v128.load16x4_u") (br)
	(code "u32x4.load16x4") (br)
	(br)
	(code "v128.load32x2_s") (br)
	(code "s64x2.load32x2") (br)
	(br)
	(code "v128.load32x2_u") (br)
	(code "u64x2.load32x2"))
    (td $vtop
	(code "v128.load") (br)
	(br)
	(code "i8x16.load") (br)
	(code "s8x16.load") (br)
	(code "u8x16.load") (br)
	(br)
	(code "i16x8.load") (br)
	(code "s16x8.load") (br)
	(code "u16x8.load") (br)
	(br)
	(code "i32x4.load") (br)
	(code "s32x4.load") (br)
	(code "u32x4.load") (br)
	(br)
	(code "i64x2.load") (br)
	(code "s64x2.load") (br)
	(code "u64x2.load") (br)
	(br)
	(code "f32x4.load") (br)
	(code "f64x2.load"))
    ) ; tr
   (tr
    (td $vtop
	(code "v128.store8_lane") (br)
	(code "i8x16.store_lane") (br)
	(code "s8x16.store_lane") (br)
	(code "u8x16.store_lane"))
    (td $vtop
	(code "v128.store16_lane") (br)
	(code "i16x8.store_lane") (br)
	(code "s16x8.store_lane") (br)
	(code "u16x8.store_lane"))
    (td $vtop
	(code "v128.store32_lane") (br)
	(code "i32x4.store_lane") (br)
	(code "s32x4.store_lane") (br)
	(code "u32x4.store_lane") (br)
	(code "f32x4.store_lane"))
    (td $vtop
	(code "v128.store64_lane") (br)
	(code "i64x2.store_lane") (br)
	(code "s64x2.store_lane") (br)
	(code "u64x2.store_lane") (br)
	(code "f64x2.store_lane"))
    (td $vtop
	(code "v128.store") (br)
	(br)
	(code "i8x16.store") (br)
	(code "s8x16.store") (br)
	(code "u8x16.store") (br)
	(br)
	(code "i16x8.store") (br)
	(code "s16x8.store") (br)
	(code "u16x8.store") (br)
	(br)
	(code "i32x4.store") (br)
	(code "s32x4.store") (br)
	(code "u32x4.store") (br)
	(br)
	(code "i64x2.store") (br)
	(code "s64x2.store") (br)
	(code "u64x2.store") (br)
	(br)
	(code "f32x4.store") (br)
	(code "f64x2.store"))
    ) ; tr
   ) ; table
  $vpad

  ) ; @def
