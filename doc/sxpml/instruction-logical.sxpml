;; -*- Lisp -*-

(@include "variable.sxpml")

(@def $wasmgen-instruction-logical-name "論理演算")

(@def $wasmgen-instruction-logical
  (@h2 $wasmgen-instruction-logical-name)
  (table
   (tr
    (th "引数")
    (th "返値")
    (th "命令")
    (th "OP")
    (th "備考"))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "i32"))
    (td $vtop (code "i32.and") (br)
	(code "s32.and") (br)
	(code "u32.and"))
    (td)
    (td $vtop (code (var "r") (sub "i32") " ← " (var "p1") (sub "i32") " & " (var "p2") (sub "i32"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "i64"))
    (td $vtop (code "i64.and") (br)
	(code "s64.and") (br)
	(code "u64.and"))
    (td)
    (td $vtop (code (var "r") (sub "i64") " ← " (var "p1") (sub "i64") " & " (var "p2") (sub "i64"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "i32"))
    (td $vtop (code "i32.or") (br)
	(code "s32.or") (br)
	(code "u32.or"))
    (td)
    (td $vtop (code (var "r") (sub "i32") " ← " (var "p1") (sub "i32") " | " (var "p2") (sub "i32"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "i64"))
    (td $vtop (code "i64.or") (br)
	(code "s64.or") (br)
	(code "u64.or"))
    (td)
    (td $vtop (code (var "r") (sub "i64") " ← " (var "p1") (sub "i64") " | " (var "p2") (sub "i64"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "i32"))
    (td $vtop (code "i32.xor") (br)
	(code "s32.xor") (br)
	(code "u32.xor"))
    (td)
    (td $vtop (code (var "r") (sub "i32") " ← " (var "p1") (sub "i32") " ^ " (var "p2") (sub "i32"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "i64"))
    (td $vtop (code "i64.xor") (br)
	(code "s64.xor") (br)
	(code "u64.xor"))
    (td)
    (td $vtop (code (var "r") (sub "i64") " ← " (var "p1") (sub "i64") " ^ " (var "p2") (sub "i64"))))
   (tr
    (td [colspan "5"]))
   (tr
    (td $topcenter (code "1"))
    (td $vtop (code "v128"))
    (td $vtop (code "v128.not") (br)
	(code "i8x16.not") (br)
	(code "s8x16.not") (br)
	(code "u8x16.not") (br)
	(code "i16x8.not") (br)
	(code "s16x8.not") (br)
	(code "u16x8.not") (br)
	(code "i32x4.not") (br)
	(code "s32x4.not") (br)
	(code "u32x4.not") (br)
	(code "i64x2.not") (br)
	(code "s64x2.not") (br)
	(code "u64x2.not"))
    (td)
    (td $vtop (code (var "r") (sub "v128") " ← " "~ " (var "p1") (sub "v128"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "v128"))
    (td $vtop (code "v128.and") (br)
	(code "i8x16.and") (br)
	(code "s8x16.and") (br)
	(code "u8x16.and") (br)
	(code "i16x8.and") (br)
	(code "s16x8.and") (br)
	(code "u16x8.and") (br)
	(code "i32x4.and") (br)
	(code "s32x4.and") (br)
	(code "u32x4.and") (br)
	(code "i64x2.and") (br)
	(code "s64x2.and") (br)
	(code "u64x2.and"))
    (td)
    (td $vtop (code (var "r") (sub "v128") " ← " (var "p1") (sub "v128") " & " (var "p2") (sub "v128"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "v128"))
    (td $vtop (code "v128.andnot") (br)
	(code "i8x16.andnot") (br)
	(code "s8x16.andnot") (br)
	(code "u8x16.andnot") (br)
	(code "i16x8.andnot") (br)
	(code "s16x8.andnot") (br)
	(code "u16x8.andnot") (br)
	(code "i32x4.andnot") (br)
	(code "s32x4.andnot") (br)
	(code "u32x4.andnot") (br)
	(code "i64x2.andnot") (br)
	(code "s64x2.andnot") (br)
	(code "u64x2.andnot"))
    (td)
    (td $vtop (code (var "r") (sub "v128") " ← " (var "p1") (sub "v128") " & ~" (var "p2") (sub "v128"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "v128"))
    (td $vtop (code "v128.or") (br)
	(code "i8x16.or") (br)
	(code "s8x16.or") (br)
	(code "u8x16.or") (br)
	(code "i16x8.or") (br)
	(code "s16x8.or") (br)
	(code "u16x8.or") (br)
	(code "i32x4.or") (br)
	(code "s32x4.or") (br)
	(code "u32x4.or") (br)
	(code "i64x2.or") (br)
	(code "s64x2.or") (br)
	(code "u64x2.or"))
    (td)
    (td $vtop (code (var "r") (sub "v128") " ← " (var "p1") (sub "v128") " | " (var "p2") (sub "v128"))))
   (tr
    (td $topcenter (code "2"))
    (td $vtop (code "v128"))
    (td $vtop (code "v128.xor") (br)
	(code "i8x16.xor") (br)
	(code "s8x16.xor") (br)
	(code "u8x16.xor") (br)
	(code "i16x8.xor") (br)
	(code "s16x8.xor") (br)
	(code "u16x8.xor") (br)
	(code "i32x4.xor") (br)
	(code "s32x4.xor") (br)
	(code "u32x4.xor") (br)
	(code "i64x2.xor") (br)
	(code "s64x2.xor") (br)
	(code "u64x2.xor"))
    (td)
    (td $vtop (code (var "r") (sub "v128") " ← " (var "p1") (sub "v128") " ^ " (var "p2") (sub "v128"))))
   (tr
    (td $topcenter (code "3"))
    (td $vtop (code "v128"))
    (td $vtop (code "v128.bitselect") (br)
	(code "i8x16.bitselect") (br)
	(code "s8x16.bitselect") (br)
	(code "u8x16.bitselect") (br)
	(code "i16x8.bitselect") (br)
	(code "s16x8.bitselect") (br)
	(code "u16x8.bitselect") (br)
	(code "i32x4.bitselect") (br)
	(code "s32x4.bitselect") (br)
	(code "u32x4.bitselect") (br)
	(code "i64x2.bitselect") (br)
	(code "s64x2.bitselect") (br)
	(code "u64x2.bitselect"))
    (td)
    (td $vtop (code (var "r") (sub "v128") " ← " "(" (var "p1") (sub "v128") " & " (var "p3") (sub "v128") ") | (" (var "p2") (sub "v128") " & ~" (var "p3") (sub "v128") ")")))
   ) ; table
  $vpad

  ) ; @def
